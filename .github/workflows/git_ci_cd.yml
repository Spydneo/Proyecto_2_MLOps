name: Building CI/CD mipaquete
run-name: ${{ github.actor }} is testing mipaquete üöÄ
on: [push]
jobs:
  building_mipaquete:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Check hola() function
        run: python -m mipaquete
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependecies
        run: poetry install
      - name: Testing
        run: poetry run pytest --junitxml=jest-junit.xml
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Tests with reports            # Name of the check run which will be created
          path: jest-junit.xml    # Path to test results
          reporter: java-junit        # Format of test results
      - name: Build mipaquete
        run: poetry build
      - name: Publish Release to GH
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.workspace }}/dist/*
      - name: Coverage Report
        uses: devmasx/coverage-check-action@v1.2.0
        with:
          type: lcov
          result_path: coverage.lcov
          min_coverage: 90
          token: ${{ github.token }}
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      


      # - run: echo "üçè This job's status is ${{ job.status }}."